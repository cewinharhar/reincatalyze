theme(legend.position = "none")
ggplot(df, aes(x = newAA, y = as.factor(newAA), group = as.factor(group))) +
geom_density_ridges(scale = 3) +
theme_ridges() +
labs(x = "New Amino Acid", y = "Group", title = "Density Ridges of Amino Acids by Group") +
theme(legend.position = "none")
fill
ggplot(df, aes(x = newAA, y = as.factor(newAA), fill = as.factor(group))) +
geom_density_ridges(scale = 3) +
theme_ridges() +
labs(x = "New Amino Acid", y = "Group", title = "Density Ridges of Amino Acids by Group") +
theme(legend.position = "none")
head(df)
as.factor(c("A", "B"))
df$oldAA |> unique()
oh <- df$oldAA |>
unique() |>
as.factor()
oh
ggplot(df, aes(x = oh, y = as.factor(newAA), fill = as.factor(group))) +
geom_density_ridges(scale = 3) +
theme_ridges() +
labs(x = "New Amino Acid", y = "Group", title = "Density Ridges of Amino Acids by Group") +
theme(legend.position = "none")
# Create a vector of amino acids
amino_acids <- c("D", "G", "H", "A", "N", "T", "I", "F", "E", "L", "P", "V", "Y", "W", "C", "K", "R")
# Count the frequency of each "newAA" per group
df_new <- df %>%
filter(newAA %in% amino_acids) %>%
group_by(group, newAA) %>%
summarise(freq = n(), .groups = 'drop') %>%
complete(group, newAA = amino_acids, fill = list(freq = 0))
# Create the plot
ggplot(df_new, aes(x = newAA, y = freq, fill = as.factor(group))) +
geom_density_ridges() +
scale_x_discrete(limits = amino_acids) +
theme_ridges() +
labs(x = "Amino Acid", y = "Frequency", title = "Density Ridges of Amino Acids by Group") +
theme(legend.position = "none")
df_new
# Create a vector of amino acids
amino_acids <- c(df$oldAA, df$newAA) |> unique()
amino_acids
# Create a vector of amino acids
amino_acids <- c(df$oldAA, df$newAA) |> unique() |> sort()
amino_acids
# Count the frequency of each "newAA" per group
df_new <- df %>%
filter(newAA %in% amino_acids) %>%
group_by(group, newAA) %>%
summarise(freq = n(), .groups = 'drop') %>%
complete(group, newAA = amino_acids, fill = list(freq = 0))
# Create the plot
ggplot(df_new, aes(x = newAA, y = freq, fill = as.factor(group))) +
geom_density_ridges() +
scale_x_discrete(limits = amino_acids) +
theme_ridges() +
labs(x = "Amino Acid", y = "Frequency", title = "Density Ridges of Amino Acids by Group") +
theme(legend.position = "none")
df_new
ggplot(df_new, aes(x = newAA, y = freq, fill = as.factor(group))) +
geom_density_ridges()
ggplot(df_new, aes(x = newAA, y = freq, group = as.factor(group))) +
geom_density_ridges()
# Create the plot
ggplot(df_new, aes(x = newAA, y = as.factor(freq), group = as.factor(group))) +
geom_density_ridges() +
scale_x_discrete(limits = amino_acids) +
theme_ridges() +
labs(x = "Amino Acid", y = "Frequency", title = "Density Ridges of Amino Acids by Group") +
theme(legend.position = "none")
# Create the plot
ggplot(df_new, aes(x = newAA, y = as.factor(freq), group = as.factor(group), fill=group)) +
geom_density_ridges() +
scale_x_discrete(limits = amino_acids) +
theme_ridges() +
labs(x = "Amino Acid", y = "Frequency", title = "Density Ridges of Amino Acids by Group") +
theme(legend.position = "none")
View(df_new)
df_new
# Count the frequency of each "newAA" per group
df_new <- df %>%
filter(newAA %in% amino_acids) %>%
group_by(group, newAA) %>%
summarise(freq = n(), .groups = 'drop') %>%
complete(group, newAA = amino_acids, fill = list(freq = 0)) |>
as.data.frame()
df_new
ggplot(df_new, aes(x = freq, y = as.factor(newAA), fill = as.factor(group))) +
geom_density_ridges() +
labs(x = "Frequency", y = "Amino Acid", title = "Frequency of Amino Acids by Group") +
theme(legend.position = "top")
ggplot(df_new, aes(x = newAA, y = freq, fill = as.factor(group))) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(x = "Amino Acid", y = "Frequency", title = "Frequency of Amino Acids by Group") +
theme(legend.position = "top")
ggplot(df_new, aes(x = freq, y = as.factor(newAA), fill = as.factor(group))) +
geom_density_ridges() +
labs(x = "Frequency", y = "Amino Acid", title = "Frequency of Amino Acids by Group") +
theme(legend.position = "top")
df_new
ggplot(df_new, aes(x = newAA, y = freq, group = as.factor(group))) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(x = "Amino Acid", y = "Frequency", title = "Frequency of Amino Acids by Group") +
theme(legend.position = "top")
ggplot(df_new, aes(x = freq, y = as.factor(newAA), group = as.factor(group))) +
geom_density_ridges() +
labs(x = "Frequency", y = "Amino Acid", title = "Frequency of Amino Acids by Group") +
theme(legend.position = "top")
ggplot(df_new, aes(x = newAA, y = freq, fill = as.factor(group))) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Amino Acid", y = "Frequency", title = "Frequency of Amino Acids by Group") +
theme(legend.position = "none")
ggplot(df_new, aes(x = newAA, y = freq, fill = as.factor(group))) +
geom_bar(stat = "identity") +
labs(x = "Amino Acid", y = "Frequency", title = "Frequency of Amino Acids by Group") +
theme(legend.position = "none") +
facet_wrap(~ group, scales = "free_y", ncol = 1)
# Count the frequency of each "newAA" per group
df_new <- df %>%
filter(newAA %in% amino_acids) %>%
group_by(group, newAA) %>%
summarise(freq = n(), .groups = 'drop') %>%
complete(group, newAA = amino_acids, fill = list(freq = 0)) |>
as.data.frame()
# Reorder the factor levels of 'group' column
df_new$group <- factor(df_new$group, levels = rev(unique(df_new$group)))
# Create the plot
ggplot(df_new, aes(x = newAA, y = freq, fill = as.factor(group))) +
geom_bar(stat = "identity") +
labs(x = "Amino Acid", y = "Frequency", title = "Frequency of Amino Acids by Group") +
theme(legend.position = "none") +
facet_wrap(~ group, scales = "free_y", ncol = 1)
# Create the plot
ggplot(df_new, aes(x = newAA, y = freq, fill = as.factor(group))) +
geom_bar(stat = "identity") +
labs(x = "Amino Acid", y = "Frequency", title = "Frequency of Amino Acids by Group") +
theme(legend.position = "none") +
facet_wrap(~ group, scales = "free_y", ncol = 1) +
theme_ridges()
# Create the plot
ggplot(df_new, aes(x = newAA, y = freq, fill = as.factor(group))) +
geom_bar(stat = "identity") +
labs(x = "Amino Acid", y = "Frequency", title = "Frequency of Amino Acids by Group") +
theme(legend.position = "none") +
facet_wrap(~ group, scales = "fixed", ncol = 1) +
theme_ridges()
# Create the plot
ggplot(df_new, aes(x = newAA, y = freq, fill = as.factor(group))) +
geom_density(stat = "identity") +
labs(x = "Amino Acid", y = "Frequency", title = "Frequency of Amino Acids by Group") +
theme(legend.position = "none") +
facet_wrap(~ group, scales = "fixed", ncol = 1) +
theme_ridges()
# Create the plot
ggplot(df_new, aes(x = newAA, y = freq, fill = as.factor(group))) +
geom_bar(stat = "identity") +
geom_jitter() +
labs(x = "Amino Acid", y = "Frequency", title = "Frequency of Amino Acids by Group") +
theme(legend.position = "none") +
facet_wrap(~ group, scales = "fixed", ncol = 1) +
theme_ridges()
# Create the plot
ggplot(df_new, aes(x = newAA, y = freq, fill = as.factor(group))) +
geom_bar(stat = "identity") +
geom_point() +
labs(x = "Amino Acid", y = "Frequency", title = "Frequency of Amino Acids by Group") +
theme(legend.position = "none") +
facet_wrap(~ group, scales = "fixed", ncol = 1) +
theme_ridges()
# Create the plot
ggplot(df_new, aes(x = newAA, y = freq, fill = as.factor(group))) +
geom_bar(stat = "identity", linewidth = 0.1) +
geom_point() +
labs(x = "Amino Acid", y = "Frequency", title = "Frequency of Amino Acids by Group") +
theme(legend.position = "none") +
facet_wrap(~ group, scales = "fixed", ncol = 1) +
theme_ridges()
# Create the plot
ggplot(df_new, aes(x = newAA, y = freq, fill = as.factor(group))) +
geom_bar(stat = "identity", linewidth = 0.5) +
geom_point() +
labs(x = "Amino Acid", y = "Frequency", title = "Frequency of Amino Acids by Group") +
theme(legend.position = "none") +
facet_wrap(~ group, scales = "fixed", ncol = 1) +
theme_ridges()
# Create the plot
ggplot(df_new, aes(x = newAA, y = freq, fill = as.factor(group))) +
geom_bar(stat = "identity",  width = 0.1) +
geom_point() +
labs(x = "Amino Acid", y = "Frequency", title = "Frequency of Amino Acids by Group") +
theme(legend.position = "none") +
facet_wrap(~ group, scales = "fixed", ncol = 1) +
theme_ridges()
# Create the plot
ggplot(df_new, aes(x = newAA, y = freq, fill = as.factor(group))) +
geom_bar(stat = "identity",  width = 0.1) +
geom_point() +
labs(x = "Amino Acid", y = "Frequency", title = "Frequency of Amino Acids by Group") +
theme(legend.position = "none") +
facet_wrap(~ group, scales = "fixed", ncol = 1) +
theme_minimal()
# Create the plot
ggplot(df_new, aes(x = newAA, y = freq, fill = as.factor(group))) +
geom_bar(stat = "identity",  width = 0.1) +
geom_point(shape = 21, fill = "lightgray",color = "black", size = 3) +
labs(x = "Amino Acid", y = "Frequency", title = "Frequency of Amino Acids by Group") +
theme(legend.position = "none") +
facet_wrap(~ group, scales = "fixed", ncol = 1) +
theme_minimal()
# Create the plot
ggplot(df_new, aes(x = newAA, y = freq, fill = as.factor(group))) +
geom_bar(stat = "identity",  width = 0.1) +
geom_point(shape = 21, fill = "lightgray",color = "black", size = 1) +
labs(x = "Amino Acid", y = "Frequency", title = "Frequency of Amino Acids by Group") +
theme(legend.position = "none") +
facet_wrap(~ group, scales = "fixed", ncol = 1) +
theme_minimal()
# Create the plot
ggplot(df_new, aes(x = newAA, y = freq, fill = as.factor(group))) +
geom_bar(stat = "identity",  width = 0.1) +
geom_point(shape = 21, fill = "lightgray",color = "black", size = 2) +
labs(x = "Amino Acid", y = "Frequency", title = "Frequency of Amino Acids by Group") +
theme(legend.position = "none") +
facet_wrap(~ group, scales = "fixed", ncol = 1) +
theme_minimal()
# Create the plot
ploti <- ggplot(df_new, aes(x = newAA, y = freq, fill = as.factor(group))) +
geom_bar(stat = "identity",  width = 0.1) +
geom_point(shape = 21, fill = "lightgray",color = "black", size = 2) +
labs(x = "Amino Acid", y = "Frequency", title = "Frequency of Amino Acids by Group") +
theme(legend.position = "none") +
facet_wrap(~ group, scales = "fixed", ncol = 1) +
theme_minimal()
ggsave("test.png", ploti)
ggsave("test.png", ploti, width = 10, height = 20)
ggsave("test.png", ploti, width = 5, height = 10)
# Create the plot
ploti <- ggplot(df_new, aes(x = newAA, y = freq, fill = as.factor(group))) +
geom_bar(stat = "identity",  width = 0.1) +
geom_point(shape = 21, fill = "lightgray",color = "black", size = 2) +
labs(x = "Amino Acid", y = "Frequency", title = "Frequency of Amino Acids by Group", fill = "Group")
ploti
# Create the plot
ploti <- ggplot(df_new, aes(x = newAA, y = freq, fill = as.factor(group))) +
geom_bar(stat = "identity",  width = 0.1) +
geom_point(shape = 21, fill = "lightgray",color = "black", size = 2) +
labs(x = "Amino Acid", y = "Frequency", title = "Frequency of Amino Acids by Group")
ploti
ggplot(df_new, aes(x = newAA, y = freq, fill = as.factor(group))) +
geom_bar(stat = "identity",  width = 0.1) +
geom_point(shape = 21, fill = "lightgray",color = "black", size = 2) +
labs(x = "Amino Acid", y = "Frequency", title = "Frequency of Amino Acids by Group") +
theme(legend.position = "none") +
facet_wrap(~ group, scales = "fixed", ncol = 1) +
theme_minimal()
# Create the plot
ploti <- ggplot(df_new, aes(x = newAA, y = freq, fill = as.factor(group))) +
geom_bar(stat = "identity",  width = 0.1) +
geom_point(shape = 21, fill = "lightgray",color = "black", size = 2) +
labs(x = "Amino Acid", y = "Frequency", title = "Frequency of Amino Acids by Group") +
facet_wrap(~ group, scales = "fixed", ncol = 1) +
theme_minimal()
ploti
# Create the plot
ploti <- ggplot(df_new, aes(x = newAA, y = freq, fill = as.factor(group))) +
geom_bar(stat = "identity",  width = 0.1) +
geom_point(shape = 21, fill = "lightgray",color = "black", size = 2) +
labs(x = "Amino Acid", y = "Frequency", title = "Frequency of Amino Acids by Group", fill = "blabla") +
facet_wrap(~ group, scales = "fixed", ncol = 1) +
theme_minimal()
ploti
# Create the plot
ploti <- ggplot(df_new, aes(x = newAA, y = freq, fill = as.factor(group))) +
geom_bar(stat = "identity",  width = 0.1) +
geom_point(shape = 21, fill = "lightgray",color = "black", size = 2) +
labs(x = "Amino Acid", y = "Frequency", title = "Frequency of Amino Acids by Group", fill = "100 generation step") +
facet_wrap(~ group, scales = "fixed", ncol = 1) +
theme_minimal()
ploti
# Create the plot
ploti <- ggplot(df_new, aes(x = oldAA, y = freq, fill = as.factor(group))) +
geom_bar(stat = "identity",  width = 0.1) +
geom_point(shape = 21, fill = "lightgray",color = "black", size = 2) +
labs(x = "Amino Acid", y = "Frequency", title = "Frequency of Amino Acids by Group", fill = "100 generation step") +
facet_wrap(~ group, scales = "fixed", ncol = 1) +
theme_minimal()
ploti
# Count the frequency of each "newAA" per group
df_new <- df %>%
filter(c(newAA, oldAA) %in% amino_acids) %>%
group_by(group, newAA) %>%
summarise(freq = n(), .groups = 'drop') %>%
complete(group, newAA = amino_acids, fill = list(freq = 0)) |>
as.data.frame()
filter(c(newAA %in% amino_acids) %>%
# Count the frequency of each "newAA" per group
df_new <- df %>%
filter(newAA %in% amino_acids) %>%
group_by(group, newAA) %>%
summarise(freq = n(), .groups = 'drop') %>%
complete(group, newAA = amino_acids, fill = list(freq = 0)) |>
as.data.frame()
df_new
amino_acids
# Reorder the factor levels of 'group' column
df_new$group <- factor(df_new$group, levels = rev(unique(df_new$group)))
df_new$newAA |> unique()
df_new$newAA |> unique() |> length()
amino_acids
# Create a vector of amino acids
amino_acids <- c("A", "C", "D", "E", "F", "G", "H", "I", "K", "L", "M", "N", "P", "Q", "R", "S", "T", "V", "W", "Y")
# Count the frequency of each "newAA" per group
df_new <- df %>%
filter(newAA %in% amino_acids) %>%
group_by(group, newAA) %>%
summarise(freq = n(), .groups = 'drop') %>%
complete(group, newAA = amino_acids, fill = list(freq = 0)) |>
as.data.frame()
# Reorder the factor levels of 'group' column
df_new$group <- factor(df_new$group, levels = rev(unique(df_new$group)))
# Create the plot
ploti <- ggplot(df_new, aes(x = newAA, y = freq, fill = as.factor(group))) +
geom_bar(stat = "identity",  width = 0.1) +
geom_point(shape = 21, fill = "lightgray",color = "black", size = 2) +
labs(x = "Amino Acid", y = "Frequency", title = "Frequency of Amino Acids by Group", fill = "100 generation step") +
facet_wrap(~ group, scales = "fixed", ncol = 1) +
theme_minimal()
ploti
# Create the plot
ploti <- ggplot(df_new, aes(x = newAA, y = freq, fill = as.factor(group))) +
geom_bar(stat = "identity",  width = 0.1) +
geom_point(shape = 21, fill = "lightgray",color = "black", size = 2) +
labs(x = "Amino Acid", y = "Frequency", title = "Frequency of AA chosen by deepMut by generation steps", fill = "100 generation step") +
facet_wrap(~ group, scales = "fixed", ncol = 1) +
theme_minimal()
ploti
create_and_save_plot <- function(dataPath, savePath, plotTitle) {
# Load required libraries
if (!require("ggplot2")) install.packages("ggplot2")
if (!require("tidyverse")) install.packages("tidyverse")
library(ggplot2)
library(tidyverse)
# Read the data
df <- read.csv(dataPath)
# Create groups
df$group <- cut(df$generation, breaks = seq(1, nrow(df), by = 100), labels = FALSE, right = FALSE)
# Create a vector of amino acids
amino_acids <- c("A", "C", "D", "E", "F", "G", "H", "I", "K", "L", "M", "N", "P", "Q", "R", "S", "T", "V", "W", "Y")
# Count the frequency of each "newAA" per group
df_new <- df %>%
filter(newAA %in% amino_acids) %>%
group_by(group, newAA) %>%
summarise(freq = n(), .groups = 'drop') %>%
complete(group, newAA = amino_acids, fill = list(freq = 0)) |>
as.data.frame()
# Reorder the factor levels of 'group' column
df_new$group <- factor(df_new$group, levels = rev(unique(df_new$group)))
# Create the plot
ploti <- ggplot(df_new, aes(x = newAA, y = freq, fill = as.factor(group))) +
geom_bar(stat = "identity",  width = 0.1) +
geom_point(shape = 21, fill = "lightgray",color = "black", size = 2) +
labs(x = "Amino Acid", y = "Frequency", title = plotTitle, fill = "100 generation step") +
facet_wrap(~ group, scales = "fixed", ncol = 1) +
theme_minimal()
# Save the plot
ggsave(savePath, ploti, width = 5, height = 20)
}
create_and_save_plot <- function(dataPath, filename, plotTitle) {
# Load required libraries
if (!require("ggplot2")) install.packages("ggplot2")
if (!require("tidyverse")) install.packages("tidyverse")
library(ggplot2)
library(tidyverse)
# Read the data
df <- read.csv(dataPath)
# Create groups
df$group <- cut(df$generation, breaks = seq(1, nrow(df), by = 100), labels = FALSE, right = FALSE)
# Create a vector of amino acids
amino_acids <- c("A", "C", "D", "E", "F", "G", "H", "I", "K", "L", "M", "N", "P", "Q", "R", "S", "T", "V", "W", "Y")
# Count the frequency of each "newAA" per group
df_new <- df %>%
filter(newAA %in% amino_acids) %>%
group_by(group, newAA) %>%
summarise(freq = n(), .groups = 'drop') %>%
complete(group, newAA = amino_acids, fill = list(freq = 0)) |>
as.data.frame()
# Reorder the factor levels of 'group' column
df_new$group <- factor(df_new$group, levels = rev(unique(df_new$group)))
# Create the plot
ploti <- ggplot(df_new, aes(x = newAA, y = freq, fill = as.factor(group))) +
geom_bar(stat = "identity",  width = 0.1) +
geom_point(shape = 21, fill = "lightgray",color = "black", size = 2) +
labs(x = "Amino Acid", y = "Frequency", title = plotTitle, fill = "100 generation step") +
facet_wrap(~ group, scales = "fixed", ncol = 1) +
theme_minimal()
# Define the save path
savePath <- paste0(dirname(dataPath), "/", filename)
# Save the plot
ggsave(savePath, ploti, width = 5, height = 20)
}
create_and_save_plot <- function(dataPath, filename, plotTitle = "Frequency of AA chosen by deepMut by generation steps") {
# Load required libraries
if (!require("ggplot2")) install.packages("ggplot2")
if (!require("tidyverse")) install.packages("tidyverse")
library(ggplot2)
library(tidyverse)
# Read the data
df <- read.csv(dataPath)
# Create groups
df$group <- cut(df$generation, breaks = seq(1, nrow(df), by = 100), labels = FALSE, right = FALSE)
# Create a vector of amino acids
amino_acids <- c("A", "C", "D", "E", "F", "G", "H", "I", "K", "L", "M", "N", "P", "Q", "R", "S", "T", "V", "W", "Y")
# Count the frequency of each "newAA" per group
df_new <- df %>%
filter(newAA %in% amino_acids) %>%
group_by(group, newAA) %>%
summarise(freq = n(), .groups = 'drop') %>%
complete(group, newAA = amino_acids, fill = list(freq = 0)) |>
as.data.frame()
# Reorder the factor levels of 'group' column
df_new$group <- factor(df_new$group, levels = rev(unique(df_new$group)))
# Create the plot
ploti <- ggplot(df_new, aes(x = newAA, y = freq, fill = as.factor(group))) +
geom_bar(stat = "identity",  width = 0.1) +
geom_point(shape = 21, fill = "lightgray",color = "black", size = 2) +
labs(x = "Amino Acid", y = "Frequency", title = plotTitle, fill = "100 generation step") +
facet_wrap(~ group, scales = "fixed", ncol = 1) +
theme_minimal()
# Define the save path
savePath <- paste0(dirname(dataPath), "/", filename)
# Save the plot
ggsave(savePath, ploti, width = 5, height = 20)
}
create_and_save_plot(
dataPath,
"AAFrequencyOverGenerations"
)
create_and_save_plot <- function(dataPath, filename, plotTitle = "Frequency of AA chosen by deepMut by generation steps") {
# Read the data
df <- read.csv(dataPath)
# Create groups
df$group <- cut(df$generation, breaks = seq(1, nrow(df), by = 100), labels = FALSE, right = FALSE)
# Create a vector of amino acids
amino_acids <- c("A", "C", "D", "E", "F", "G", "H", "I", "K", "L", "M", "N", "P", "Q", "R", "S", "T", "V", "W", "Y")
# Count the frequency of each "newAA" per group
df_new <- df %>%
filter(newAA %in% amino_acids) %>%
group_by(group, newAA) %>%
summarise(freq = n(), .groups = 'drop') %>%
complete(group, newAA = amino_acids, fill = list(freq = 0)) |>
as.data.frame()
# Reorder the factor levels of 'group' column
df_new$group <- factor(df_new$group, levels = rev(unique(df_new$group)))
# Create the plot
ploti <- ggplot(df_new, aes(x = newAA, y = freq, fill = as.factor(group))) +
geom_bar(stat = "identity",  width = 0.1) +
geom_point(shape = 21, fill = "lightgray",color = "black", size = 2) +
labs(x = "Amino Acid", y = "Frequency", title = plotTitle, fill = "100 generation step") +
facet_wrap(~ group, scales = "fixed", ncol = 1) +
theme_minimal()
# Define the save path
savePath <- paste0(dirname(dataPath), "/", filename)
# Save the plot
ggsave(savePath, ploti, width = 5, height = 20)
}
create_and_save_plot(
dataPath,
"AAFrequencyOverGenerations"
)
create_and_save_plot(
dataPath,
"AAFrequencyOverGenerations.png"
)
create_and_save_plot <- function(dataPath, filename, plotTitle = "Frequency of AA chosen by deepMut by generation steps") {
# Read the data
df <- read.csv(dataPath)
amino_acids <- c("A", "C", "D", "E", "F", "G", "H", "I", "K", "L", "M", "N", "P", "Q", "R", "S", "T", "V", "W", "Y")
# Create groups
df$group <- cut(df$generation, breaks = seq(1, nrow(df), by = 100), labels = FALSE, right = FALSE)
# Create a vector of amino acids
amino_acids <- c("A", "C", "D", "E", "F", "G", "H", "I", "K", "L", "M", "N", "P", "Q", "R", "S", "T", "V", "W", "Y")
# Count the frequency of each "newAA" per group
df_new <- df %>%
filter(newAA %in% amino_acids) %>%
group_by(group, newAA) %>%
summarise(freq = n(), .groups = 'drop') %>%
complete(group, newAA = amino_acids, fill = list(freq = 0)) |>
as.data.frame()
# Reorder the factor levels of 'group' column
df_new$group <- factor(df_new$group, levels = rev(unique(df_new$group)))
# Create the plot
ploti <- ggplot(df_new, aes(x = newAA, y = freq, fill = as.factor(group))) +
geom_bar(stat = "identity",  width = 0.1) +
geom_point(shape = 21, fill = "lightgray",color = "black", size = 2) +
labs(x = "Amino Acid", y = "Frequency", title = plotTitle, fill = "100 generation step") +
facet_wrap(~ group, scales = "fixed", ncol = 1) +
theme_minimal()
# Define the save path
savePath <- paste0(dirname(dataPath), "/", filename)
# Save the plot
ggsave(savePath, ploti, width = 5, height = 10)
}
create_and_save_plot(
dataPath,
"AAFrequencyOverGenerations.png"
)
create_and_save_plot(
dataPath,
"AAFrequencyOverGenerations.png",
""
)
